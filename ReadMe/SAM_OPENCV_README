SAM Image Segmentation Utility
  Description
    This script utilizes the SAM (Segment Anything Model) to perform image segmentation, generating masks for specific points or the entire image. The process leverages the powerful ViT-H variant of the SAM model.

Requirements
  Python 3.x
  OpenCV (opencv-python)
  NumPy
  Matplotlib
  Pillow
  Torchvision

SAM (Segment Anything Model) and its dependencies
  Installation
  Install the required Python packages:
  pip install opencv-python numpy matplotlib Pillow torchvision

Setup
  Add the directory containing the segment-anything module to the Python path.
  Download and specify the path to the SAM model weights.

Inputs
  Image Path: Path to the input image to be segmented.
    Example: /Users/nishanttiwari/Desktop/output_256_1024_328-1343_quad.tif
  Model Weights Path: Location of the SAM model weights.
    Example: /Users/nishanttiwari/Desktop/SAM weights/sam_vit_h_4b8939.pth
  Output Directory: Directory to save the generated masks and masked images.
    Example: /Users/nishanttiwari/Desktop/OPEN_CV_SAM_OUTPUT

Outputs
  Masks for specified points or the entire image are saved as PNG files.
  The original image with overlayed masks is displayed using Matplotlib.
  A combined mask applied to the entire image is saved as a JPG file.

Features
  Point-based Segmentation: Generate masks for specified points in the image.
  Automatic Full Image Segmentation: Automatically generate masks covering significant features of the entire image.

Visualization: Display the original image with contours of the generated masks.
Mask Combination: Combine individual masks into a single mask and apply it to the original image.

Usage
  Modify the image and model weights paths in the script.
  Run the script to process the image and generate outputs.

Conclusion
  This utility provides an effective way to utilize advanced segmentation models like SAM for practical image processing tasks, useful in various applications from academic research to industrial automation.

